serviceName: FeedbackReader
grpc:
  port: :5004
  development: true
probes:
  readinessPath: /ready
  livenessPath: /live
  port: :3004
  pprof: :6003
  prometheusPath: /metrics
  prometheusPort: :8004
  checkIntervalSeconds: 10
logger:
  level: debug
  devMode: false
  encoder: json
postgres:
  host: localhost
  port: 5432
  user: postgres
  password: postgres
  dbName: products
  sslMode: false
kafka:
  brokers: ["localhost:9092"]
  groupID: nlp_worker_consumer
  initTopics: true
  kafkaTopics:
    feedbackRaw:
      topicName: feedback_raw
      partitions: 10
      replicationFactor: 1
    feedbackCreate:
      topicName: feedback_create
      partitions: 10
      replicationFactor: 1
    feedbackAnalyzed:
      topicName: feedback_analyzed
      partitions: 10
      replicationFactor: 1
redis:
  addr: "localhost:6379"
  password: ""
  db: 0
  poolSize: 300
mongo:
  uri: "mongodb://localhost:27017"
  user: "admin"
  password: "admin"
  db: feedback_analysis
mongoCollections:
  feedbacks: feedback_analysis
serviceSettings:
  redisFeedbackPrefixKey: "reader:feedback"
jaeger:
  enable: true
  serviceName: reader_service
  hostPort: "localhost:6831"
  logSpans: false